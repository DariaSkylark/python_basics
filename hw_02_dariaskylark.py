# ### Задача: Проверка четности числа
# Напиши программу, которая проверяет, является ли введенное число четным или нечетным.
#
# **Условия задачи:**
# 1. Запросить у пользователя целое число.
# 2. Если число четное, вывести "Четное число".
# 3. Если число нечетное, вывести "Нечетное число".

user_num = int(input("Пожалуйста, введите целое число: "))

if user_num % 2 == 0:
    print("Четное число")
else:
    print("Нечетное число")


# ### Задача: Проверка возраста
# Напиши программу, которая проверяет, может ли человек приобрести билет на концерт.
# На концерт пустают только с 18 лет.
#
# 1. Запросить возраст пользователя.
# 2. Если возраст 18 лет или больше — вывести "Вы можете купить билет".
# 3. Если возраст меньше 18 лет — вывести "Вы не можете купить билет ~~иди учи уроки - завтра в школу~~".

user_age = int(input("Пожалуйста, введите Ваш возраст: "))
allowed_age = 18;
if user_age >= allowed_age:
    print("Вы можете купить билет.")
else:
    print("Вы не можете купить билет. Отправляйтесь учить уроки - завтра в школу.")


# ### Задача: Проверка на положительное, отрицательное или ноль
# Напиши программу, которая принимает число и проверяет, является ли оно положительным, отрицательным или нулем.
#
# **Условия задачи:**
# 1. Если число больше 0 — вывести "Число положительное".
# 2. Если число меньше 0 — вывести "Число отрицательное".
# 3. Если число равно 0 — вывести "Число равно нулю".

user_input = int(input("Пожалуйста, введите число: "))

if user_input > 0:
    print("Число положительное")
if user_input < 0:
    print("Число отрицательное")
if user_input == 0:
    print("Число равно нулю")


# ### Задача: Сравнение двух чисел
# Напиши программу, которая сравнивает два числа и выводит:
# 1. Если первое число больше второго, вывести "Первое число больше второго".
# 2. Если первое число меньше второго, вывести "Первое число меньше второго".
# 3. Если оба числа равны, вывести "Числа равны".
#
# Воод 2 чисел должен быть реалихован в одном `input()`

num1, num2 = input("Пожалуйста, введите два числа через пробел: ").split()

if num1 > num2:
    print("Первое число больше второго")
if num1 < num2:
    print("Первое число меньше второго")
if num1 == num2:
    print("Числа равны")


# ### Задача: Проверка на делимость
# Напиши программу, которая проверяет, делится ли число на 3.
#
# **Условия задачи:**
# 1. Запросить число у пользователя.
# 2. Если число делится на 3 без остатка, вывести "Число делится на 3".
# 3. Если не делится, вывести "Число не делится на 3".

user_number = int(input("Пожалуйста, введите число: "))
if user_number % 3 == 0:
    print("Число делится на 3.")
else:
    print("Число не делится на 3.")


# ### Задача: Обработка списка чисел
# Напиши программу, которая принимает список чисел в интервале от -1 до +1 и выводит:
# - Количество чисел, равных -1.
# - Количество чисел, равных 0.
# - Количество чисел, равных 1.
#
# **Примечание**: для ввода данных использовать `input()` и реализовать один из форматов ввода из примера.
#
# **Пример ввода:**
# ```python
# [1, -1, 1, 0, -1, 0, 0]
# # или
# 1, -1, 1, 0, -1, 0, 0
# # или
# 1 -1 1 0 -1 0 0
# ```
#
# **Пример вывода:**
# ```
# Количество -1: 2
# Количество 0: 3
# Количество 1: 2
# ```

user_list = (input("Пожалуйста, введите список целых чисел в интервале от -1 до +1 через пробел:")).split()

count_minus = user_list.count("-1")
count_plus = user_list.count("1")
count_zero = user_list.count("0")

print(f"Количество -1: {count_minus}")
print(f"Количество 1: {count_plus}")
print(f"Количество 0: {count_zero}")


# ### Задача: Соотношение чисел в списке
# Используя код, написанный в предыдущей задаче, проверьте соотношение значений в списке. Выведите следующие утверждения:
# - Значения -1 составляют {}% от имеющиегося списка
# - Значения 0 составляют {}% от имеющиегося списка
# - Значения 1 составляют {}% от имеющиегося списка

user_list = (input("Пожалуйста, введите список целых чисел в интервале от -1 до +1 через пробел:")).split()

count_minus = user_list.count("-1")
count_plus = user_list.count("1")
count_zero = user_list.count("0")

list_length = len(user_list)

perc_of_minus = count_minus / list_length * 100
perc_of_minus_rounded = round(perc_of_minus, 2)

perc_of_plus = count_plus / list_length * 100
perc_of_plus_rounded = round(perc_of_plus, 2)

perc_of_zero = count_zero / list_length * 100
perc_of_zero_rounded = round(perc_of_zero, 2)

print(f"Значения -1 составляют: {perc_of_minus_rounded}% от имеющегося списка.")
print(f"Значения 1 составляют: {perc_of_plus_rounded}% от имеющегося списка.")
print(f"Значения -1 составляют: {perc_of_zero_rounded}% от имеющегося списка.")


# ### Задача: Частота вхождений всех возможных значений
# Используя код, написанный в предыдущей задаче, найдите значение наиболее часто встречающееся в списке.
# В зависимости от входных данных выведите следующие утверждения:
#
# - Значение {} встречается чаще остальных
# - Значения {} и {} встречаются чаще чем {}
# - Все три возможных значения всречаются с одинаковой частотой

user_list = (input("Пожалуйста, введите список целых чисел в интервале от -1 до +1 через пробел:")).split()

count_minus = user_list.count("-1")
count_plus = user_list.count("1")
count_zero = user_list.count("0")

if count_minus > count_plus and count_minus > count_zero:
    print(f"Значение -1 встречается чаще остальных.")
if count_plus > count_minus and count_plus > count_zero:
    print(f"Значение 1 встречается чаще остальных.")
if count_zero > count_plus and count_zero > count_minus:
    print(f"Значение 0 встречается чаще остальных.")

if count_minus < count_plus and count_minus < count_zero:
    print(f"Значения 1 и 0 встречаются чаще, чем -1.")
if count_plus < count_minus and count_plus < count_zero:
    print(f"Значения -1 и 0 встречаются чаще, чем 1.")
if count_zero < count_plus and count_zero < count_minus:
    print(f"Значения -1 и 1 встречаются чаще, чем 0.")

if count_minus == count_plus == count_zero:
    print(f"Все три возможных значения встречаются с одинаковой частотой.")


# ### Задача: Создание `dict`
# Используя код, написанный в предыдущей задаче, создайте `dict` содержащий все полученные данные.
# Словарь должен содержать исходные данные, характеристики каждого из значений и финальное заключение
# о частоте вхождений всех возможных значений.

user_list = (input("Пожалуйста, введите список целых чисел в интервале от -1 до +1 через пробел:")).split()

count_minus = user_list.count("-1")
count_plus = user_list.count("1")
count_zero = user_list.count("0")

list_length = len(user_list)

perc_of_minus = count_minus / list_length * 100
perc_of_minus_rounded = round(perc_of_minus, 2)

perc_of_plus = count_plus / list_length * 100
perc_of_plus_rounded = round(perc_of_plus, 2)

perc_of_zero = count_zero / list_length * 100
perc_of_zero_rounded = round(perc_of_zero, 2)

numbers_dict = {
    "Введенные значения": user_list,
    "Характеристики значения -1:": {
        "Количество в списке:": count_minus,
        "Процент от списка:": perc_of_minus_rounded,
    },
    "Характеристики значения 1:": {
        "Количество в списке:": count_plus,
        "Процент от списка:": perc_of_plus_rounded,
    },
    "Характеристики значения 0:": {
        "Количество в списке:": count_zero,
        "Процент от списка:": perc_of_zero_rounded,
    }
}
if count_minus > count_plus and count_minus > count_zero:
    numbers_dict.update({"Заключение о частоте:": "Значение -1 встречается чаще остальных."})
if count_minus > count_plus and count_minus > count_zero and count_plus > count_zero:
    numbers_dict.update(
        {"Заключение о частоте:": "Значение -1 встречается чаще остальных. Значения -1 и 1 встречаются чаще, чем 0."})
if  count_minus > count_plus and count_minus > count_zero and count_zero > count_plus:
    numbers_dict.update(
        {"Заключение о частоте:": "Значение -1 встречается чаще остальных. Значения -1 и 0 встречаются чаще, чем 1."})

if count_plus > count_minus and count_plus > count_zero:
    numbers_dict.update(
        {"Заключение о частоте:": "Значение 1 встречается чаще остальных."})
if count_plus > count_minus and count_plus > count_zero and count_minus > count_zero:
    numbers_dict.update(
        {"Заключение о частоте:": "Значение 1 встречается чаще остальных. Значения 1 и -1 встречаются чаще, чем 0."})
if count_plus > count_minus and count_plus > count_zero and count_zero > count_minus:
    numbers_dict.update(
        {"Заключение о частоте:": "Значение 1 встречается чаще остальных. Значения 1 и 0 встречаются чаще, чем -1."})

if count_zero > count_plus and count_zero > count_minus:
    numbers_dict.update(
        {"Заключение о частоте:": "Значение 0 встречается чаще остальных."})
if count_zero > count_plus and count_zero > count_minus and count_plus > count_minus:
    numbers_dict.update(
        {"Заключение о частоте:": "Значение 0 встречается чаще остальных. Значения 0 и 1 встречаются чаще, чем -1."})
if count_zero > count_plus and count_zero > count_minus and count_minus > count_plus:
    numbers_dict.update(
        {"Заключение о частоте:": "Значение 0 встречается чаще остальных. Значения 0 и -1 встречаются чаще, чем 1."})

if count_minus == count_plus == count_zero:
    numbers_dict.update(
        {"Заключение о частоте:": "Все три возможных значения встречаются с одинаковой частотой."})

print(numbers_dict)


# ### Задача: Проверка наличия ключа в словаре
# Напишите программу, которая имеет словарь, где ключи — это имена студентов, а значения — лист с оценками. Программа должна:
# - Запрашивать имя студента.
# - Проверить, есть ли этот студент в словаре.
# - Если студент есть в словаре, вывести его оценки и среднее арифметическое (использовать функцию `sum()` на листе с оценками).
# - Если студента нет, вывести сообщение "Студент не найден".
#
# ```python
# # Пример `sum()`
#
# ll = [1, 2, 3]
# ss = sum(ll)
# print(ss)  # 6
# ```

students_list = {
    "Маша": [5, 5, 5, 5],
    "Иван": [5, 4, 5, 4],
    "Петр": [4, 4, 4, 5],
    "Оля": [3, 4, 4, 3]
}

user_request = input("Пожалуйста, введите имя студента (без фамилии): ")

print(students_list.get(user_request, "Студент не найден"))

student_score = students_list.get(user_request)
am_score = sum(student_score) / len(student_score)
print(f"Среднее арифметическое оценок {am_score}")

